// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PresentLocation {
  Dhaka
  Chattogram
  Barishal
  Khulna
  Mymensingh
  Rangpur
  Rajshahi
}

enum ProfileType {
  Traveller
  Business
}

enum BusinessType {
  HorseRiding
  BoatService
  RestaurantService
  HotelService
  Parasailing
}

enum TripLocation {
  Sunamganj
  Coxsbazar
  Bandarban
  Sylhet
}

model User {
  id          String            @id @default(uuid()) @db.Uuid
  name        String
  email       String            @unique
  password    String
  profileType ProfileType
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  traveller   TravellerProfile?
  business    BusinessProfile?
}

model TravellerProfile {
  id        String     @id @default(uuid()) @db.Uuid
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String     @unique @db.Uuid
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  tripPlan  TripPlan[]
}

model TripPlan {
  id              String           @id @default(uuid()) @db.Uuid
  traveller       TravellerProfile @relation(fields: [travellerId], references: [id])
  travellerId     String           @unique @db.Uuid
  tripLocation    TripLocation
  presentLocation PresentLocation
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model BusinessProfile {
  id                String              @id @default(uuid()) @db.Uuid
  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String              @unique @db.Uuid
  businessType      BusinessType?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  onBoarded         Boolean             @default(false)
  horseRiding       HorseRiding[]
  boatService       BoatService[]
  restaurantService RestaurantService[]
  hotelService      HotelService[]
  parasailing       Parasailing[]
}

model RestaurantService {
  id            String               @id @default(uuid()) @db.Uuid
  business      BusinessProfile      @relation(fields: [businessId], references: [id])
  businessId    String               @db.Uuid
  name          String
  location      TripLocation
  description   String
  slogan        String?
  contactNumber String
  imageUrls     String[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  menuItems     RestaurantMenuItem[]
}

model RestaurantMenuItem {
  id           String            @id @default(uuid()) @db.Uuid
  restaurant   RestaurantService @relation(fields: [restaurantId], references: [id])
  restaurantId String            @db.Uuid
  name         String
  price        Int
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model HotelService {
  id         String          @id @default(uuid()) @db.Uuid
  business   BusinessProfile @relation(fields: [businessId], references: [id])
  businessId String          @db.Uuid
  name       String
  location   String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model HorseRiding {
  id         String          @id @default(uuid()) @db.Uuid
  business   BusinessProfile @relation(fields: [businessId], references: [id])
  businessId String          @db.Uuid
  name       String
  location   String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model BoatService {
  id         String          @id @default(uuid()) @db.Uuid
  business   BusinessProfile @relation(fields: [businessId], references: [id])
  businessId String          @db.Uuid
  name       String
  location   String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model Parasailing {
  id         String          @id @default(uuid()) @db.Uuid
  business   BusinessProfile @relation(fields: [businessId], references: [id])
  businessId String          @db.Uuid
  name       String
  location   String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}
